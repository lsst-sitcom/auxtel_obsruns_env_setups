#!/usr/bin/env bash
# This script should be executed (not sourced) from a users Nublado account
# it backs up their current ~/notebooks/.user_setups file and creates a new one
# to setup the NFS mounted environment. 

datestamp=$(date +"%Y-%m-%dT%I:%M:%S")
saved_file_path=$HOME"/notebooks/user_setups-"$datestamp".bak"

# Create the new .user_setups file
# This file contains all the packages that require an eups setup
FILE_PATH=$HOME"/notebooks/.user_setups"
if test -f "$FILE_PATH"; then
  printf "Moving .user_setups file to $saved_file_path \n"
  mv ~/notebooks/.user_setups $saved_file_path
fi

printf "Creating a new ~/notebooks/.user_setups file \n"

# Declare repos of interest
# where packages are held on Nublado
REPOS="/net/obs-env/auto_base_packages/"
# where file with setup statements are held
REPOS_FILE_PATH=$REPOS"auto_env_setup.sh"

cat <<EOT >> $FILE_PATH
#!/usr/bin/sh bash
# This file is auto generated by the ${HOME}/auxtel_obsruns_env_setups/bash/lsst/sitcom/user_setups_mod script. The first three lines are added automatically and source the shared common environment needed to use Notebooks during an observing run. DO NOT overwrite, modify, or move. 
source ${REPOS_FILE_PATH}

# The following three lines are required to use a DDS daemon within a notebook.
source $OSPL_HOME/release.com
export OSPL_URI=$(python -c "from lsst.ts import ddsconfig; print( (ddsconfig.get_config_dir() / 'ospl-shmem.xml').as_uri())")
 
#  This file is expected to be found in ${HOME}/notebooks/.user_setups
#  It is a shell fragment that will be sourced during kernel startup 
#  when the LSST kernel is started in a JupyterLab environment.  It runs
#  in the user context and can contain arbitrary shell code.  Exported changes
#  in its environment will persist into the JupyterLab Python environment.

EOT

printf '\n New .user_setup file created \n'
